<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
   <!-- Root Context: defines shared resources visible to all other web components -->
   <!-- API(HikariCP) -->
   <!-- bean : 객체를 생성하는 태그 -->
   <!-- *Connection을 하기위해 driver 파일의 위치, 내 DB의 URL, BD접근 위한 계정이름, 계정의 비밀번호가 필요하다-->
   <!-- *HikariConfig는 데이터베이스에 연결하기 위한 정보들을 담고 있는 설정 객체이다 -->
   <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
      <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
      <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/com"/>
      <property name="username" value="com"/>
      <property name="password" value="com01"/>
   </bean>
   
   <!-- HikariDataSource(Connection POOL을 만드는 역할을 한다) -->
   <!-- *hikariConfig는 dataSource 설정에 사용되며, 이 dataSource는 DAO에서 DB에 접속할 때 이용된다 -->
   <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
      <constructor-arg ref="hikariConfig" /> <!--* hikariConfig를 생성자의 매개변수로 전달한다 -->
   </bean>
   
   <!-- Mapper interface들을 메모리에 올리는 방법(scan) -->
   <mybatis-spring:scan base-package="kr.board.mapper"/>
   
   <!-- BoardMapper interface의 구현클래스 생성
   SqlSessionFactoryBean(SQL을 실행하는 API) -->
   <!--**SqlSessionFactoryBean은 MyBatis에서 JDBC를 수행하고, 데이터를 돌려주기도 하고 SQL 문장 주면 알아서 실행, Close까지 모두 처리하는 핵심 역할을 한다 -->
   <bean class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource" /> <!-- *JDBC 하려면 Connection 해야하므로, property 속성으로 dataSource를 참조하게 된다 -->
   </bean>
</beans>